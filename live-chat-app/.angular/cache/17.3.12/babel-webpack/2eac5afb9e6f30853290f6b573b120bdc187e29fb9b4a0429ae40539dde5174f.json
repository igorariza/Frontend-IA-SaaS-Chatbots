{"ast":null,"code":"import { WebSocketService } from '../../services/websocket.service';\nimport { MessageService } from '../../services/message.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/websocket.service\";\nimport * as i2 from \"../../services/message.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../message/message.component\";\nfunction ChatWindowComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-message\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"sender\", message_r1.sender)(\"content\", message_r1.content);\n  }\n}\nexport let ChatWindowComponent = /*#__PURE__*/(() => {\n  class ChatWindowComponent {\n    constructor(websocketService, messageService) {\n      this.websocketService = websocketService;\n      this.messageService = messageService;\n      this.messages = [];\n      this.newMessage = '';\n    }\n    ngOnInit() {\n      this.messageService.message$.subscribe(message => {\n        this.messages.push({\n          sender: 'You',\n          content: message\n        });\n      });\n    }\n    sendMessage() {\n      if (this.newMessage.trim()) {\n        const message = {\n          sender: 'User',\n          content: this.newMessage\n        };\n        this.websocketService.sendMessage(message);\n        this.messages.push(message);\n        this.newMessage = '';\n      }\n    }\n    joinChatRoom(room) {\n      this.websocketService.joinRoom(room);\n    }\n    static {\n      this.ɵfac = function ChatWindowComponent_Factory(t) {\n        return new (t || ChatWindowComponent)(i0.ɵɵdirectiveInject(i1.WebSocketService), i0.ɵɵdirectiveInject(i2.MessageService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ChatWindowComponent,\n        selectors: [[\"app-chat-window\"]],\n        decls: 3,\n        vars: 1,\n        consts: [[1, \"chat-window\"], [1, \"messages\"], [4, \"ngFor\", \"ngForOf\"], [3, \"sender\", \"content\"]],\n        template: function ChatWindowComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n            i0.ɵɵtemplate(2, ChatWindowComponent_div_2_Template, 2, 2, \"div\", 2);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n          }\n        },\n        dependencies: [i3.NgForOf, i4.MessageComponent],\n        styles: [\".chat-window[_ngcontent-%COMP%]{display:flex;flex-direction:column;height:100%;border:1px solid #ccc;border-radius:5px;padding:10px;background-color:#f9f9f9}.messages[_ngcontent-%COMP%]{flex:1;overflow-y:auto;margin-bottom:10px}.input-area[_ngcontent-%COMP%]{display:flex}.input-area[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{flex:1;padding:10px;border:1px solid #ccc;border-radius:5px}.input-area[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:10px;margin-left:5px;border:none;border-radius:5px;background-color:#007bff;color:#fff;cursor:pointer}.input-area[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#0056b3}\"]\n      });\n    }\n  }\n  return ChatWindowComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}