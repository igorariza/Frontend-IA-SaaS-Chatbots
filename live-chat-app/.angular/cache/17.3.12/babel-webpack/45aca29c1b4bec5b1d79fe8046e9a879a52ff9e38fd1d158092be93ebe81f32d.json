{"ast":null,"code":"export class WebSocketService {\n  constructor(url) {\n    this.url = url;\n    this.connect();\n  }\n  connect() {\n    this.socket = new WebSocket(this.url);\n    this.socket.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n    this.socket.onmessage = event => {\n      this.handleMessage(event.data);\n    };\n    this.socket.onclose = () => {\n      console.log('WebSocket connection closed, attempting to reconnect...');\n      setTimeout(() => this.connect(), 1000);\n    };\n    this.socket.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n  }\n  sendMessage(message) {\n    if (this.socket.readyState === WebSocket.OPEN) {\n      this.socket.send(message);\n    } else {\n      console.error('WebSocket is not open. Unable to send message.');\n    }\n  }\n  handleMessage(data) {\n    console.log('Received message:', data);\n    // Handle incoming messages here\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}