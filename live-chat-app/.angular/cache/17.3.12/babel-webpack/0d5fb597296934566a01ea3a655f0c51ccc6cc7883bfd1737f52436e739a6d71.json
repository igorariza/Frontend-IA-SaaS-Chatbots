{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar _a;\nimport { Component } from '@angular/core';\nlet ChatWindowComponent = class ChatWindowComponent {\n  constructor(websocketService) {\n    this.websocketService = websocketService;\n    this.messages = [];\n    this.newMessage = '';\n    this.websocketService.onMessage(message => {\n      this.messages.push(message);\n    });\n  }\n  sendMessage() {\n    if (this.newMessage.trim()) {\n      const message = {\n        sender: 'User',\n        content: this.newMessage\n      };\n      this.websocketService.sendMessage(message);\n      this.messages.push(message);\n      this.newMessage = '';\n    }\n  }\n  joinChatRoom(room) {\n    this.websocketService.joinRoom(room);\n  }\n};\nChatWindowComponent = __decorate([Component({\n  selector: 'app-chat-window',\n  templateUrl: './chat-window.component.html',\n  styleUrls: ['./chat-window.component.css']\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof WebSocketService !== \"undefined\" && WebSocketService) === \"function\" ? _a : Object])], ChatWindowComponent);\nexport { ChatWindowComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}